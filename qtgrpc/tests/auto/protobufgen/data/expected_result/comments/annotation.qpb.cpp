/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#include "annotation.qpb.h"
#include <QProtobufSerializer>

namespace qtprotobufnamespace::tests {
AnnotatedMessage1::~AnnotatedMessage1() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_AnnotatedMessage1_uint_data;
    const char qt_protobuf_AnnotatedMessage1_char_data[55];
} qt_protobuf_AnnotatedMessage1_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        43, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        44, /* = testField */
        54, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testField */
        // Property indices:
        0, /* = testField */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testField */
    },
    // char_data
    /* metadata char_data: */
    "qtprotobufnamespace.tests.AnnotatedMessage1\0" /* = full message name */
    /* field char_data: */
    "testField\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering AnnotatedMessage1::propertyOrdering = {
    &qt_protobuf_AnnotatedMessage1_metadata.data
};

void AnnotatedMessage1::registerTypes()
{
    qRegisterMetaType<AnnotatedMessage1>();
    qRegisterMetaType<AnnotatedMessage1Repeated>();
}
AnnotatedMessage1::AnnotatedMessage1() : QProtobufMessage(&AnnotatedMessage1::staticMetaObject),
    m_testField(0)
{
}
AnnotatedMessage1::AnnotatedMessage1(const AnnotatedMessage1 &other) : QProtobufMessage(other),
    m_testField(other.m_testField)
{
}
AnnotatedMessage1 &AnnotatedMessage1::operator =(const AnnotatedMessage1 &other)
{
    QProtobufMessage::operator=(other);
    setTestField(other.m_testField);
    return *this;
}
AnnotatedMessage1::AnnotatedMessage1(AnnotatedMessage1 &&other) noexcept : QProtobufMessage(std::move(other))
{
    setTestField(std::exchange(other.m_testField, 0));
}
AnnotatedMessage1 &AnnotatedMessage1::operator =(AnnotatedMessage1 &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    setTestField(std::exchange(other.m_testField, 0));
    return *this;
}
bool AnnotatedMessage1::operator ==(const AnnotatedMessage1 &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && m_testField == other.m_testField;
}
bool AnnotatedMessage1::operator !=(const AnnotatedMessage1 &other) const
{
    return !this->operator ==(other);
}

AnnotatedMessage2::~AnnotatedMessage2() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_AnnotatedMessage2_uint_data;
    const char qt_protobuf_AnnotatedMessage2_char_data[55];
} qt_protobuf_AnnotatedMessage2_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        43, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        44, /* = testField */
        54, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testField */
        // Property indices:
        0, /* = testField */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testField */
    },
    // char_data
    /* metadata char_data: */
    "qtprotobufnamespace.tests.AnnotatedMessage2\0" /* = full message name */
    /* field char_data: */
    "testField\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering AnnotatedMessage2::propertyOrdering = {
    &qt_protobuf_AnnotatedMessage2_metadata.data
};

void AnnotatedMessage2::registerTypes()
{
    qRegisterMetaType<AnnotatedMessage2>();
    qRegisterMetaType<AnnotatedMessage2Repeated>();
}
AnnotatedMessage2::AnnotatedMessage2() : QProtobufMessage(&AnnotatedMessage2::staticMetaObject),
    m_testField(0)
{
}
AnnotatedMessage2::AnnotatedMessage2(const AnnotatedMessage2 &other) : QProtobufMessage(other),
    m_testField(other.m_testField)
{
}
AnnotatedMessage2 &AnnotatedMessage2::operator =(const AnnotatedMessage2 &other)
{
    QProtobufMessage::operator=(other);
    setTestField(other.m_testField);
    return *this;
}
AnnotatedMessage2::AnnotatedMessage2(AnnotatedMessage2 &&other) noexcept : QProtobufMessage(std::move(other))
{
    setTestField(std::exchange(other.m_testField, 0));
}
AnnotatedMessage2 &AnnotatedMessage2::operator =(AnnotatedMessage2 &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    setTestField(std::exchange(other.m_testField, 0));
    return *this;
}
bool AnnotatedMessage2::operator ==(const AnnotatedMessage2 &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && m_testField == other.m_testField;
}
bool AnnotatedMessage2::operator !=(const AnnotatedMessage2 &other) const
{
    return !this->operator ==(other);
}

AnnotatedMessage3::~AnnotatedMessage3() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_AnnotatedMessage3_uint_data;
    const char qt_protobuf_AnnotatedMessage3_char_data[55];
} qt_protobuf_AnnotatedMessage3_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        43, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        44, /* = testField */
        54, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testField */
        // Property indices:
        0, /* = testField */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testField */
    },
    // char_data
    /* metadata char_data: */
    "qtprotobufnamespace.tests.AnnotatedMessage3\0" /* = full message name */
    /* field char_data: */
    "testField\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering AnnotatedMessage3::propertyOrdering = {
    &qt_protobuf_AnnotatedMessage3_metadata.data
};

void AnnotatedMessage3::registerTypes()
{
    qRegisterMetaType<AnnotatedMessage3>();
    qRegisterMetaType<AnnotatedMessage3Repeated>();
}
AnnotatedMessage3::AnnotatedMessage3() : QProtobufMessage(&AnnotatedMessage3::staticMetaObject),
    m_testField(0)
{
}
AnnotatedMessage3::AnnotatedMessage3(const AnnotatedMessage3 &other) : QProtobufMessage(other),
    m_testField(other.m_testField)
{
}
AnnotatedMessage3 &AnnotatedMessage3::operator =(const AnnotatedMessage3 &other)
{
    QProtobufMessage::operator=(other);
    setTestField(other.m_testField);
    return *this;
}
AnnotatedMessage3::AnnotatedMessage3(AnnotatedMessage3 &&other) noexcept : QProtobufMessage(std::move(other))
{
    setTestField(std::exchange(other.m_testField, 0));
}
AnnotatedMessage3 &AnnotatedMessage3::operator =(AnnotatedMessage3 &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    setTestField(std::exchange(other.m_testField, 0));
    return *this;
}
bool AnnotatedMessage3::operator ==(const AnnotatedMessage3 &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && m_testField == other.m_testField;
}
bool AnnotatedMessage3::operator !=(const AnnotatedMessage3 &other) const
{
    return !this->operator ==(other);
}

AnnotatedMessage4::~AnnotatedMessage4() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_AnnotatedMessage4_uint_data;
    const char qt_protobuf_AnnotatedMessage4_char_data[55];
} qt_protobuf_AnnotatedMessage4_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        43, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        44, /* = testField */
        54, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testField */
        // Property indices:
        0, /* = testField */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testField */
    },
    // char_data
    /* metadata char_data: */
    "qtprotobufnamespace.tests.AnnotatedMessage4\0" /* = full message name */
    /* field char_data: */
    "testField\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering AnnotatedMessage4::propertyOrdering = {
    &qt_protobuf_AnnotatedMessage4_metadata.data
};

void AnnotatedMessage4::registerTypes()
{
    qRegisterMetaType<AnnotatedMessage4>();
    qRegisterMetaType<AnnotatedMessage4Repeated>();
}
AnnotatedMessage4::AnnotatedMessage4() : QProtobufMessage(&AnnotatedMessage4::staticMetaObject),
    m_testField(0)
{
}
AnnotatedMessage4::AnnotatedMessage4(const AnnotatedMessage4 &other) : QProtobufMessage(other),
    m_testField(other.m_testField)
{
}
AnnotatedMessage4 &AnnotatedMessage4::operator =(const AnnotatedMessage4 &other)
{
    QProtobufMessage::operator=(other);
    setTestField(other.m_testField);
    return *this;
}
AnnotatedMessage4::AnnotatedMessage4(AnnotatedMessage4 &&other) noexcept : QProtobufMessage(std::move(other))
{
    setTestField(std::exchange(other.m_testField, 0));
}
AnnotatedMessage4 &AnnotatedMessage4::operator =(AnnotatedMessage4 &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    setTestField(std::exchange(other.m_testField, 0));
    return *this;
}
bool AnnotatedMessage4::operator ==(const AnnotatedMessage4 &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && m_testField == other.m_testField;
}
bool AnnotatedMessage4::operator !=(const AnnotatedMessage4 &other) const
{
    return !this->operator ==(other);
}

AnnotatedMessage5::~AnnotatedMessage5() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_AnnotatedMessage5_uint_data;
    const char qt_protobuf_AnnotatedMessage5_char_data[55];
} qt_protobuf_AnnotatedMessage5_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        43, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        44, /* = testField */
        54, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testField */
        // Property indices:
        0, /* = testField */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testField */
    },
    // char_data
    /* metadata char_data: */
    "qtprotobufnamespace.tests.AnnotatedMessage5\0" /* = full message name */
    /* field char_data: */
    "testField\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering AnnotatedMessage5::propertyOrdering = {
    &qt_protobuf_AnnotatedMessage5_metadata.data
};

void AnnotatedMessage5::registerTypes()
{
    qRegisterMetaType<AnnotatedMessage5>();
    qRegisterMetaType<AnnotatedMessage5Repeated>();
}
AnnotatedMessage5::AnnotatedMessage5() : QProtobufMessage(&AnnotatedMessage5::staticMetaObject),
    m_testField(0)
{
}
AnnotatedMessage5::AnnotatedMessage5(const AnnotatedMessage5 &other) : QProtobufMessage(other),
    m_testField(other.m_testField)
{
}
AnnotatedMessage5 &AnnotatedMessage5::operator =(const AnnotatedMessage5 &other)
{
    QProtobufMessage::operator=(other);
    setTestField(other.m_testField);
    return *this;
}
AnnotatedMessage5::AnnotatedMessage5(AnnotatedMessage5 &&other) noexcept : QProtobufMessage(std::move(other))
{
    setTestField(std::exchange(other.m_testField, 0));
}
AnnotatedMessage5 &AnnotatedMessage5::operator =(AnnotatedMessage5 &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    setTestField(std::exchange(other.m_testField, 0));
    return *this;
}
bool AnnotatedMessage5::operator ==(const AnnotatedMessage5 &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && m_testField == other.m_testField;
}
bool AnnotatedMessage5::operator !=(const AnnotatedMessage5 &other) const
{
    return !this->operator ==(other);
}

AnnotatedMessage6::~AnnotatedMessage6() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_AnnotatedMessage6_uint_data;
    const char qt_protobuf_AnnotatedMessage6_char_data[55];
} qt_protobuf_AnnotatedMessage6_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        43, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        44, /* = testField */
        54, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testField */
        // Property indices:
        0, /* = testField */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testField */
    },
    // char_data
    /* metadata char_data: */
    "qtprotobufnamespace.tests.AnnotatedMessage6\0" /* = full message name */
    /* field char_data: */
    "testField\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering AnnotatedMessage6::propertyOrdering = {
    &qt_protobuf_AnnotatedMessage6_metadata.data
};

void AnnotatedMessage6::registerTypes()
{
    qRegisterMetaType<AnnotatedMessage6>();
    qRegisterMetaType<AnnotatedMessage6Repeated>();
}
AnnotatedMessage6::AnnotatedMessage6() : QProtobufMessage(&AnnotatedMessage6::staticMetaObject),
    m_testField(0)
{
}
AnnotatedMessage6::AnnotatedMessage6(const AnnotatedMessage6 &other) : QProtobufMessage(other),
    m_testField(other.m_testField)
{
}
AnnotatedMessage6 &AnnotatedMessage6::operator =(const AnnotatedMessage6 &other)
{
    QProtobufMessage::operator=(other);
    setTestField(other.m_testField);
    return *this;
}
AnnotatedMessage6::AnnotatedMessage6(AnnotatedMessage6 &&other) noexcept : QProtobufMessage(std::move(other))
{
    setTestField(std::exchange(other.m_testField, 0));
}
AnnotatedMessage6 &AnnotatedMessage6::operator =(AnnotatedMessage6 &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    setTestField(std::exchange(other.m_testField, 0));
    return *this;
}
bool AnnotatedMessage6::operator ==(const AnnotatedMessage6 &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && m_testField == other.m_testField;
}
bool AnnotatedMessage6::operator !=(const AnnotatedMessage6 &other) const
{
    return !this->operator ==(other);
}

AnnotatedMessage7::~AnnotatedMessage7() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_AnnotatedMessage7_uint_data;
    const char qt_protobuf_AnnotatedMessage7_char_data[55];
} qt_protobuf_AnnotatedMessage7_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        43, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        44, /* = testField */
        54, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testField */
        // Property indices:
        0, /* = testField */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testField */
    },
    // char_data
    /* metadata char_data: */
    "qtprotobufnamespace.tests.AnnotatedMessage7\0" /* = full message name */
    /* field char_data: */
    "testField\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering AnnotatedMessage7::propertyOrdering = {
    &qt_protobuf_AnnotatedMessage7_metadata.data
};

void AnnotatedMessage7::registerTypes()
{
    qRegisterMetaType<AnnotatedMessage7>();
    qRegisterMetaType<AnnotatedMessage7Repeated>();
}
AnnotatedMessage7::AnnotatedMessage7() : QProtobufMessage(&AnnotatedMessage7::staticMetaObject),
    m_testField(0)
{
}
AnnotatedMessage7::AnnotatedMessage7(const AnnotatedMessage7 &other) : QProtobufMessage(other),
    m_testField(other.m_testField)
{
}
AnnotatedMessage7 &AnnotatedMessage7::operator =(const AnnotatedMessage7 &other)
{
    QProtobufMessage::operator=(other);
    setTestField(other.m_testField);
    return *this;
}
AnnotatedMessage7::AnnotatedMessage7(AnnotatedMessage7 &&other) noexcept : QProtobufMessage(std::move(other))
{
    setTestField(std::exchange(other.m_testField, 0));
}
AnnotatedMessage7 &AnnotatedMessage7::operator =(AnnotatedMessage7 &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    setTestField(std::exchange(other.m_testField, 0));
    return *this;
}
bool AnnotatedMessage7::operator ==(const AnnotatedMessage7 &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && m_testField == other.m_testField;
}
bool AnnotatedMessage7::operator !=(const AnnotatedMessage7 &other) const
{
    return !this->operator ==(other);
}

AnnotatedMessage8::~AnnotatedMessage8() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_AnnotatedMessage8_uint_data;
    const char qt_protobuf_AnnotatedMessage8_char_data[55];
} qt_protobuf_AnnotatedMessage8_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        43, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        44, /* = testField */
        54, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testField */
        // Property indices:
        0, /* = testField */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testField */
    },
    // char_data
    /* metadata char_data: */
    "qtprotobufnamespace.tests.AnnotatedMessage8\0" /* = full message name */
    /* field char_data: */
    "testField\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering AnnotatedMessage8::propertyOrdering = {
    &qt_protobuf_AnnotatedMessage8_metadata.data
};

void AnnotatedMessage8::registerTypes()
{
    qRegisterMetaType<AnnotatedMessage8>();
    qRegisterMetaType<AnnotatedMessage8Repeated>();
}
AnnotatedMessage8::AnnotatedMessage8() : QProtobufMessage(&AnnotatedMessage8::staticMetaObject),
    m_testField(0)
{
}
AnnotatedMessage8::AnnotatedMessage8(const AnnotatedMessage8 &other) : QProtobufMessage(other),
    m_testField(other.m_testField)
{
}
AnnotatedMessage8 &AnnotatedMessage8::operator =(const AnnotatedMessage8 &other)
{
    QProtobufMessage::operator=(other);
    setTestField(other.m_testField);
    return *this;
}
AnnotatedMessage8::AnnotatedMessage8(AnnotatedMessage8 &&other) noexcept : QProtobufMessage(std::move(other))
{
    setTestField(std::exchange(other.m_testField, 0));
}
AnnotatedMessage8 &AnnotatedMessage8::operator =(AnnotatedMessage8 &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    setTestField(std::exchange(other.m_testField, 0));
    return *this;
}
bool AnnotatedMessage8::operator ==(const AnnotatedMessage8 &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && m_testField == other.m_testField;
}
bool AnnotatedMessage8::operator !=(const AnnotatedMessage8 &other) const
{
    return !this->operator ==(other);
}

AnnotatedMessage9::~AnnotatedMessage9() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_AnnotatedMessage9_uint_data;
    const char qt_protobuf_AnnotatedMessage9_char_data[55];
} qt_protobuf_AnnotatedMessage9_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        43, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        44, /* = testField */
        54, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testField */
        // Property indices:
        0, /* = testField */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testField */
    },
    // char_data
    /* metadata char_data: */
    "qtprotobufnamespace.tests.AnnotatedMessage9\0" /* = full message name */
    /* field char_data: */
    "testField\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering AnnotatedMessage9::propertyOrdering = {
    &qt_protobuf_AnnotatedMessage9_metadata.data
};

void AnnotatedMessage9::registerTypes()
{
    qRegisterMetaType<AnnotatedMessage9>();
    qRegisterMetaType<AnnotatedMessage9Repeated>();
}
AnnotatedMessage9::AnnotatedMessage9() : QProtobufMessage(&AnnotatedMessage9::staticMetaObject),
    m_testField(0)
{
}
AnnotatedMessage9::AnnotatedMessage9(const AnnotatedMessage9 &other) : QProtobufMessage(other),
    m_testField(other.m_testField)
{
}
AnnotatedMessage9 &AnnotatedMessage9::operator =(const AnnotatedMessage9 &other)
{
    QProtobufMessage::operator=(other);
    setTestField(other.m_testField);
    return *this;
}
AnnotatedMessage9::AnnotatedMessage9(AnnotatedMessage9 &&other) noexcept : QProtobufMessage(std::move(other))
{
    setTestField(std::exchange(other.m_testField, 0));
}
AnnotatedMessage9 &AnnotatedMessage9::operator =(AnnotatedMessage9 &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    setTestField(std::exchange(other.m_testField, 0));
    return *this;
}
bool AnnotatedMessage9::operator ==(const AnnotatedMessage9 &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && m_testField == other.m_testField;
}
bool AnnotatedMessage9::operator !=(const AnnotatedMessage9 &other) const
{
    return !this->operator ==(other);
}

} // namespace qtprotobufnamespace::tests

#include "moc_annotation.qpb.cpp"
